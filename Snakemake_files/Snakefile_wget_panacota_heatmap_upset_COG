import glob
import os
import shutil

with open("genbank_ids") as f:
 SAMPLES = f.read().splitlines()


rule final:
 input:
  "outputs/GCskew.txt",
  "outputs/pav_matrix.tsv",
  "outputs/heatmap.svg",
  "outputs/cog_output.txt"

rule wget:
    input:
        "genbank_ids"
    output:
        expand("outputs/genomes/{sample}.fasta", sample=SAMPLES),
        expand("outputs/genomes/{sample}.gb", sample=SAMPLES),
        expand("outputs/genomes/{sample}.prt", sample=SAMPLES)
    shell:
        """
        perl $PANEX_PATH/Perl/wget.pl {input} outputs/genomes
        """

rule gcskew:
    input:
        "outputs/genomes/{sample}.fasta" 
    output:
        "outputs/genomes/{sample}.fasta.gcskew.txt"
    shell:
        """
        python3 $PANEX_PATH/SkewIT/src/gcskew.py -i {input} -o {input}.gcskew.txt -k 1000 -w 1000
        """ 

rule concat_gcskew:
    input:
        expand("outputs/genomes/{sample}.fasta.gcskew.txt", sample=SAMPLES)
    output:
        out2="outputs/GCskew.txt"
    shell:
        """
         cat {input} >>{output.out2}
        """

rule genbank2gff3:
    input:
        "outputs/genomes/{sample}.gb"
    output:
        gff1="outputs/genomes/{sample}.gb.gff",
        gff2="outputs/genomes/{sample}.gb.rmdup.gff"
    shell:
        """
        perl $PANEX_PATH/Perl/bp_genbank2gff3.pl -o outputs/genomes {input}
        perl $PANEX_PATH/Perl/remove_duplicates_in_gff.pl {output.gff1} {output.gff2}
        """

rule panacota:
    input:
        expand("outputs/genomes/{sample}.prt", sample=SAMPLES)
    output:
        pav="outputs/panacota/PanGenome-mydataset.All.prt-clust-0.8-mode1.lst"
    shell:
        """
        cat outputs/genomes/*prt >outputs/genomes/mydataset.All.prt
        PanACoTA pangenome -l outputs/genomes/mydataset.All.prt -n mydataset -d outputs/genomes -o outputs/panacota
        """

rule convert_matrix:
    input:
        pav="outputs/panacota/PanGenome-mydataset.All.prt-clust-0.8-mode1.lst"
    output:
        "outputs/pav_matrix.tsv"
    shell:
        """
        perl $PANEX_PATH/Perl/ConvertPanacotaMatrix.pl outputs/genomes {input} {output} outputs/genomes/strains.txt 
        """

rule cog:
    input:
        pav="outputs/pav_matrix.tsv"
    output:
        cog="outputs/cog_output.txt",
        cogstat="outputs/cog_stats.txt",
        cogstat2="outputs/cog_stats2.txt",
        cogofclusters="outputs/cog_of_clusters.txt"
    shell:
        """
        perl $PANEX_PATH/Perl/GetCogOfCluster.pl {input} outputs/genomes {output.cog} {output.cogstat} {output.cogstat2} {output.cogofclusters} outputs/genomes/strains.txt
        """
        
rule heatmap_upset:
    input:
        pav="outputs/pav_matrix.tsv",
        cogofclusters="outputs/cog_of_clusters.txt"
    output:
        heatmap="outputs/heatmap.svg",
        upsetr="outputs/upsetr.svg"
    shell:
        """
        perl $PANEX_PATH/Perl/GenerateHeatmapFromPAV.pl {input.pav} {output.heatmap}
        mv {output.heatmap}.upsetr.svg {output.upsetr}
        """
