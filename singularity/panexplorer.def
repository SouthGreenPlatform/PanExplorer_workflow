Bootstrap: docker
From: debian:latest

%runscript
    echo "This is what happens when you run the container..."

%post
    echo "Hello from inside the container"
    apt-get update
    apt-get install -y bash wget r-base-core r-cran-svglite r-cran-upsetr r-cran-optparse r-cran-dendextend r-cran-gplots ncbi-blast+ ncbi-blast+-legacy roary prokka snakemake python3 cd-hit mafft mcl phylip python3-pip libstatistics-linefit-perl bioperl libstatistics-distributions-perl pdf2svg python3-biopython r-cran-heatmaply python3-pandas python3-numpy python3-seaborn python3-xarray python3-plotly pipx autoconf libgsl-dev fastani python3-virtualenv

    wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.8.3-Linux-x86_64.sh
    chmod +x Miniconda3-py38_4.8.3-Linux-x86_64.sh
    ./Miniconda3-py38_4.8.3-Linux-x86_64.sh -b -p /opt/miniconda3
    ln -s /opt/miniconda3/bin/conda /usr/bin/conda
 
    git clone https://github.com/aleimba/bac-genomics-scripts.git
    cp -rf bac-genomics-scripts /usr/local/bin

    R --quiet --slave -e 'install.packages("micropan", version = "1.3.0", repos="https://cloud.r-project.org/")'

    #pip3 install git+https://github.com/gtonkinhill/panaroo

    wget http://downloads.sourceforge.net/project/pgap/PGAP-1.2.1/PGAP-1.2.1.tar.gz
    tar -xzvf PGAP-1.2.1.tar.gz
    cp -rf PGAP-1.2.1 /usr/local/bin
    sed -i "s/\/home\/zhaoyb\/work\/PGAP\/PGAP\/Programs\/ExtraBin\/mcl/\/usr\/bin\/mcl/g" /usr/local/bin/PGAP-1.2.1/PGAP.pl
    sed -i "s/\/home\/zhaoyb\/work\/PGAP\/PGAP\/Programs\/ExtraBin\//\/usr\/bin\//g" /usr/local/bin/PGAP-1.2.1/PGAP.pl
    sed -i "s/\/share\/ibm-1\/bin\//\/usr\/bin\//g" /usr/local/bin/PGAP-1.2.1/PGAP.pl

    wget https://github.com/davidemms/OrthoFinder/releases/latest/download/OrthoFinder.tar.gz
    tar -xzvf OrthoFinder.tar.gz
    cp -rf OrthoFinder /usr/bin/

    wget http://github.com/bbuchfink/diamond/releases/download/v2.1.8/diamond-linux64.tar.gz
    tar xzf diamond-linux64.tar.gz
    cp -rf ./diamond /usr/bin/OrthoFinder/bin/

    git clone https://github.com/SouthGreenPlatform/PanExplorer_workflow.git

    export PANEX_PATH=/usr/local/bin/PanExplorer_workflow    
    cp -rf PanExplorer_workflow /usr/local/bin
    wget https://ftp.ncbi.nlm.nih.gov/pub/mmdb/cdd/little_endian/Cog_LE.tar.gz
    tar -xzvf Cog_LE.tar.gz
    cp -rf Cog.* $PANEX_PATH/COG    

    echo "#!/bin/bash" >/usr/bin/consense
    echo "phylip consense $*" >>/usr/bin/consense
    chmod 755 /usr/bin/consense 
    echo "#!/bin/bash" >/usr/bin/neighbor
    echo "phylip neighbor $*" >>/usr/bin/neighbor
    chmod 755 /usr/bin/neighbor
    echo "#!/bin/bash" >/usr/bin/seqboot
    echo "phylip seqboot $*" >>/usr/bin/seqboot
    chmod 755 /usr/bin/seqboot
    echo "#!/bin/bash" >/usr/bin/dnadist
    echo "phylip dnadist $*" >>/usr/bin/dnadist
    chmod 755 /usr/bin/dnadist
    echo "#!/bin/bash" >/usr/bin/dnapars
    echo "phylip dnapars $*" >>/usr/bin/dnapars
    chmod 755 /usr/bin/dnapars
    echo "#!/bin/bash" >/usr/bin/dnaml
    echo "phylip dnaml $*" >>/usr/bin/dnaml
    chmod 755 /usr/bin/dnaml

    wget https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz --no-check-certificate
    tar xvfz mmseqs-linux-sse41.tar.gz
    cp -rf mmseqs/bin/mmseqs /usr/bin/
   
    export PIPX_HOME=/opt/pipx
    export PIPX_BIN_DIR=/usr/local/bin 
    pipx install panacota

    git clone https://github.com/lh3/gfatools
    cd gfatools && make
    cp -rf  gfatools /usr/bin/

    conda install -y -c bioconda minimap2
    conda install -y -c bioconda liftoff

    #git clone https://github.com/agshumate/Liftoff liftoff 
    #cd liftoff
    #python setup.py install
    #pipx install Liftoff

    #wget https://github.com/ComparativeGenomicsToolkit/cactus/releases/download/v2.6.9/cactus-bin-v2.6.9.tar.gz
    wget https://github.com/ComparativeGenomicsToolkit/cactus/releases/download/v2.6.9/cactus-bin-legacy-v2.6.9.tar.gz
    tar -xzf cactus-bin-legacy-v2.6.9.tar.gz
    chown -R root cactus-bin-v2.6.9
    cd cactus-bin-v2.6.9
    virtualenv -p python3 venv-cactus-v2.6.9
    printf "export PATH=$(pwd)/bin:\$PATH\nexport PYTHONPATH=$(pwd)/lib:\$PYTHONPATH\n" >> venv-cactus-v2.6.9/bin/activate
    . venv-cactus-v2.6.9/bin/activate
    python3 -m pip install -U setuptools pip
    python3 -m pip install -U .
    python3 -m pip install -U -r ./toil-requirement.txt
    mkdir /usr/bin/cactus
    cd ..
    cp -rf cactus-bin-v2.6.9 /usr/bin/
    chmod -R 777 /usr/bin/cactus-bin-v2.6.9

    #wget https://github.com/ParBLiSS/FastANI/archive/master.zip
    #unzip master.zip
    #cd FastANI-master/
    #autoconf
    #./configure --with-gsl=/usr/
    #make

#    apt-get -y install build-essential bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1
#    rm -rf /var/lib/apt/lists/*
#    #Installing Anaconda 2 and Conda 4.5.11
#    wget -c https://repo.continuum.io/archive/Anaconda2-5.3.0-Linux-x86_64.sh
#    /bin/bash Anaconda2-5.3.0-Linux-x86_64.sh -bfp /usr/local
#    #Conda configuration of channels from .condarc file
#    conda config --file /.condarc --add channels defaults
#    conda config --file /.condarc --add channels conda-forge
#    conda config --file /.condarc --add channels bioconda
#    conda update conda
#    #List installed environments
#    conda list

#    conda install -c bioconda orthofinder

%environment
    export PATH=$PATH:/usr/games:/usr/bin/OrthoFinder:/usr/bin/OrthoFinder/bin:/usr/bin/cactus-bin-v2.6.9/bin:/usr/bin/cactus-bin-v2.6.9/venv-cactus-v2.6.9/bin
    export PYTHONPATH=$PYTHONPATH:/usr/bin/cactus-bin-v2.6.9/lib
